#!/bin/bash

ucversion=13.0.0
maxwidth=72

download () {
  rm -rf unicode
  mkdir -p unicode
  curl -Ls "https://www.unicode.org/Public/${ucversion}/ucd/UnicodeData.txt" -o unicode/data.txt
}

make_dec () {
  while read line; do
    IFS=\; F=($line)
    local hex=${F[0]}
    local dec=$((16#$hex))
    echo "${dec};${line}"
  done < unicode/data.txt > unicode/dec.txt
}

make_classes () {
  sort -t \; -k 4,4 -k 1,1n -o unicode/classes.txt unicode/dec.txt
  while read line; do
    IFS=\; F=($line)
    local class=${F[3],,}
    echo "$line" >> "unicode/${class}.txt"
  done < unicode/classes.txt
}

make_pegn () {
  local class
  for file in unicode/??.txt; do
    class=${file%\.txt}
    class=${class#unicode/}
    echo -n "uc_${class} <- "
    local -i last_dec=-2
    local in_range
    local first_in_range
    local sep=
    local col=
    while read line; do
      IFS=\; F=($line)
      local -i dec=${F[0]}
      local hex=${F[1]}
      if (( dec > last_dec+1 )); then
        if [[ -n $in_range ]]; then
          if [[ $last_hex == $first_in_range ]];then
            if (( col > max_width )); then
              printf "\n         "
            fi
            local out="${sep}u${last_hex} "
            echo -n $out
            sep="/ "
            ((col+=${#sep}))
          else
            if (( col > max_width )); then
              printf "\n         "
            fi
            local out="${sep}[u${first_in_range}-u${last_hex}] "
            echo -n $out
            sep="/ "
            ((col+=${#sep}))
          fi
          #echo "END OF RANGE: u$last_hex"
          #echo "-----------------------END"
        fi
        #echo "START OF RANGE: u$hex"
        first_in_range=$hex
        in_range=1
      fi
      #echo $line
      last_dec=$dec
      last_hex=$hex
    done < $file
    echo
    echo
  done
  #done > unicode/unicode.pegn
}

#download
#make_dec
#make_classes
make_pegn
